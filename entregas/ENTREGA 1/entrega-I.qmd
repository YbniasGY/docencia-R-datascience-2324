---
title: "Entrega I"
author: "C. Tangana - DNI: 00000000-X"
format:
  html:
    theme: [style.scss]
    toc: true
    toc-location: right
    toc-title: Índice
editor: visual
---

## Instrucciones (leer antes de empezar)

* Modifica dentro del documento `.qmd` tus datos personales (nombre y DNI) ubicados en la cabecera del archivo.

* Asegúrate, **ANTES de seguir editando** el documento, que el archivo `.qmd` se renderiza correctamente y se genera el `.html` correspondiente en tu carpeta local de tu ordenador.

* Los chunks (cajas de código) creados están o vacíos o incompletos, de ahí que la mayoría tengan la opción `#| eval: false`. Una vez que edites lo que consideres, debes ir cambiando cada chunck a `#| eval: true` (o quitarlo directamente) para que se ejecuten.

* Recuerda que puedes ejecutar chunk a chunk con el botón _play_ o ejecutar todos los chunk hasta uno dado (con el botón a la izquierda del anterior).

### Paquetes necesarios

Necesitaremos los siguientes paquetes (haz play en el chunk para que se carguen):

```{r paquetes}
rm(list = ls()) # Borramos variables de environment

# descomentar si es la primera vez (y requieren instalación)
# install.packages("glue")
# install.packages("dplyr")
library(glue)
library(dplyr)
```


## Caso práctico: análisis de Star Wars

### Ejercicio 1: carga de datos (ya resuelto)

El archivo de datos a usar lo cargaremos del paquete`{dplyr}`. En él tenemos diferentes variables de los **personajes de Star Wars**, con características de su pelo, piel, altura, nombre, etc.


```{r}
# no cambies código
starwars
```

### Ejercicio 2

> ¿Cuántos personajes hay guardados en la base de datos? ¿Cuántas características se han medido de cada uno?

```{r}
#| eval: false

# Escribe el código que consideres
```


[Escribe en el chunk el código que consideres para responder la pregunta y aquí debajo como texto normal lo que consideres para responder, borrando esta frase]

### Ejercicio 3

> Extrae en dos variables distintas, nombres y edades, las variables correspondientes de la tbala. ¿De qué tipo es la variable nombre? ¿Y la variable birth_year?

```{r}
#| eval: false

# Escribe el código que consideres
nombres <- ...
edades <- ...
```

[Escribe en el chunk el código que consideres para responder la pregunta y aquí debajo como texto normal lo que consideres para responder, borrando esta frase]

### Ejercicio 4

> Ordena la variable edad, primero de menor a mayor (de jóvenes a viejos) y luego al revés. Obtén el vector de nombres (ordenados de jóvenes a mayores)

```{r}
#| eval: false

# Escribe el código que consideres
sort(...) # piensa la otra forma de ordenar, la necesitarás debajo
sort(...)

nombres[...]
```

[Escribe en el chunk el código que consideres para responder la pregunta y aquí debajo como texto normal lo que consideres para responder, borrando esta frase]


### Ejercicio 5

> Busca ayuda de la función unique(). Úsala para saber que modalidades tiene la variable cualitativa correspondiente al color de ojos. ¿Cuántos distintos hay?

```{r}
#| eval: false

# Escribe el código que consideres
```

[Escribe en el chunk el código que consideres para responder la pregunta y aquí debajo como texto normal lo que consideres para responder, borrando esta frase]


### Ejercicio 6

> ¿Existe ALGÚN valor ausente en la variable de color ojos? En caso de que existan, ¿de cuántos personajes desconocemos su color de ojos?


```{r}
#| eval: false

# Escribe el código que consideres
```

[Escribe en el chunk el código que consideres para responder la pregunta y aquí debajo como texto normal lo que consideres para responder, borrando esta frase]


### Ejercicio 7

> Calcula la media y desviación típica de las variables de estatura y peso. Recuerda: cuidado con los ausentes. Define un vector con los nombres, pesos y estaturas de los personajes que tienen los ojos azules. Define un tibble con esas tres variables e incorpora una cuarta variable que se llame "IMC" que calcule el índice de masa corporal.

```{r}
#| eval: false

# Escribe el código que consideres
mean(..., ...)
sd(..., ...)

tibble(...)
```


[Escribe en el chunk el código que consideres para responder la pregunta y aquí debajo como texto normal lo que consideres para responder, borrando esta frase]

